
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COSINE DIVIDE FUNC_CALL INVERSECOSINE INVERSESINE INVERSETANGENT LPAREN MINUS MULTIPLY NUMBER PI PLUS POWER RPAREN SINE SQUAREROOT TANGENTexpression : NUMBERexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression DIVIDE expressionexpression : expression MULTIPLY expressionexpression : expression POWER LPAREN expression RPARENexpression : PIexpression : FUNC_CALL'
    
_lr_action_items = {'NUMBER':([0,5,6,7,8,14,],[2,2,2,2,2,2,]),'PI':([0,5,6,7,8,14,],[3,3,3,3,3,3,]),'FUNC_CALL':([0,5,6,7,8,14,],[4,4,4,4,4,4,]),'$end':([1,2,3,4,10,11,12,13,16,],[0,-1,-7,-8,-2,-3,-4,-5,-6,]),'PLUS':([1,2,3,4,10,11,12,13,15,16,],[5,-1,-7,-8,5,5,5,5,5,-6,]),'MINUS':([1,2,3,4,10,11,12,13,15,16,],[6,-1,-7,-8,6,6,6,6,6,-6,]),'DIVIDE':([1,2,3,4,10,11,12,13,15,16,],[7,-1,-7,-8,7,7,7,7,7,-6,]),'MULTIPLY':([1,2,3,4,10,11,12,13,15,16,],[8,-1,-7,-8,8,8,8,8,8,-6,]),'POWER':([1,2,3,4,10,11,12,13,15,16,],[9,-1,-7,-8,9,9,9,9,9,-6,]),'RPAREN':([2,3,4,10,11,12,13,15,16,],[-1,-7,-8,-2,-3,-4,-5,16,-6,]),'LPAREN':([9,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,5,6,7,8,14,],[1,10,11,12,13,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',7),
  ('expression -> expression PLUS expression','expression',3,'p_expression_plus','parser.py',11),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','parser.py',15),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_divide','parser.py',19),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_times','parser.py',23),
  ('expression -> expression POWER LPAREN expression RPAREN','expression',5,'p_expression_power','parser.py',31),
  ('expression -> PI','expression',1,'p_expression_pi','parser.py',59),
  ('expression -> FUNC_CALL','expression',1,'p_expression_func_call','parser.py',63),
]
