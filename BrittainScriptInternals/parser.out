Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> NUMBER
Rule 2     expression -> expression PLUS expression
Rule 3     expression -> expression MINUS expression
Rule 4     expression -> expression DIVIDE expression
Rule 5     expression -> expression MULTIPLY expression
Rule 6     expression -> SQUAREROOT LPAREN expression RPAREN
Rule 7     expression -> expression POWER LPAREN expression RPAREN
Rule 8     expression -> SINE LPAREN expression RPAREN
Rule 9     expression -> COSINE LPAREN expression RPAREN
Rule 10    expression -> TANGENT LPAREN expression RPAREN
Rule 11    expression -> PI
Rule 12    expression -> FUNC_CALL

Terminals, with rules where they appear

COSINE               : 9
DIVIDE               : 4
FUNC_CALL            : 12
LPAREN               : 6 7 8 9 10
MINUS                : 3
MULTIPLY             : 5
NUMBER               : 1
PI                   : 11
PLUS                 : 2
POWER                : 7
RPAREN               : 6 7 8 9 10
SINE                 : 8
SQUAREROOT           : 6
TANGENT              : 10
error                : 

Nonterminals, with rules where they appear

expression           : 2 2 3 3 4 4 5 5 6 7 7 8 9 10 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression MULTIPLY expression
    (6) expression -> . SQUAREROOT LPAREN expression RPAREN
    (7) expression -> . expression POWER LPAREN expression RPAREN
    (8) expression -> . SINE LPAREN expression RPAREN
    (9) expression -> . COSINE LPAREN expression RPAREN
    (10) expression -> . TANGENT LPAREN expression RPAREN
    (11) expression -> . PI
    (12) expression -> . FUNC_CALL

    NUMBER          shift and go to state 2
    SQUAREROOT      shift and go to state 3
    SINE            shift and go to state 4
    COSINE          shift and go to state 5
    TANGENT         shift and go to state 6
    PI              shift and go to state 7
    FUNC_CALL       shift and go to state 8

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . MULTIPLY expression
    (7) expression -> expression . POWER LPAREN expression RPAREN

    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    DIVIDE          shift and go to state 11
    MULTIPLY        shift and go to state 12
    POWER           shift and go to state 13


state 2

    (1) expression -> NUMBER .

    PLUS            reduce using rule 1 (expression -> NUMBER .)
    MINUS           reduce using rule 1 (expression -> NUMBER .)
    DIVIDE          reduce using rule 1 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 1 (expression -> NUMBER .)
    POWER           reduce using rule 1 (expression -> NUMBER .)
    $end            reduce using rule 1 (expression -> NUMBER .)
    RPAREN          reduce using rule 1 (expression -> NUMBER .)


state 3

    (6) expression -> SQUAREROOT . LPAREN expression RPAREN

    LPAREN          shift and go to state 14


state 4

    (8) expression -> SINE . LPAREN expression RPAREN

    LPAREN          shift and go to state 15


state 5

    (9) expression -> COSINE . LPAREN expression RPAREN

    LPAREN          shift and go to state 16


state 6

    (10) expression -> TANGENT . LPAREN expression RPAREN

    LPAREN          shift and go to state 17


state 7

    (11) expression -> PI .

    PLUS            reduce using rule 11 (expression -> PI .)
    MINUS           reduce using rule 11 (expression -> PI .)
    DIVIDE          reduce using rule 11 (expression -> PI .)
    MULTIPLY        reduce using rule 11 (expression -> PI .)
    POWER           reduce using rule 11 (expression -> PI .)
    $end            reduce using rule 11 (expression -> PI .)
    RPAREN          reduce using rule 11 (expression -> PI .)


state 8

    (12) expression -> FUNC_CALL .

    PLUS            reduce using rule 12 (expression -> FUNC_CALL .)
    MINUS           reduce using rule 12 (expression -> FUNC_CALL .)
    DIVIDE          reduce using rule 12 (expression -> FUNC_CALL .)
    MULTIPLY        reduce using rule 12 (expression -> FUNC_CALL .)
    POWER           reduce using rule 12 (expression -> FUNC_CALL .)
    $end            reduce using rule 12 (expression -> FUNC_CALL .)
    RPAREN          reduce using rule 12 (expression -> FUNC_CALL .)


state 9

    (2) expression -> expression PLUS . expression
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression MULTIPLY expression
    (6) expression -> . SQUAREROOT LPAREN expression RPAREN
    (7) expression -> . expression POWER LPAREN expression RPAREN
    (8) expression -> . SINE LPAREN expression RPAREN
    (9) expression -> . COSINE LPAREN expression RPAREN
    (10) expression -> . TANGENT LPAREN expression RPAREN
    (11) expression -> . PI
    (12) expression -> . FUNC_CALL

    NUMBER          shift and go to state 2
    SQUAREROOT      shift and go to state 3
    SINE            shift and go to state 4
    COSINE          shift and go to state 5
    TANGENT         shift and go to state 6
    PI              shift and go to state 7
    FUNC_CALL       shift and go to state 8

    expression                     shift and go to state 18

state 10

    (3) expression -> expression MINUS . expression
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression MULTIPLY expression
    (6) expression -> . SQUAREROOT LPAREN expression RPAREN
    (7) expression -> . expression POWER LPAREN expression RPAREN
    (8) expression -> . SINE LPAREN expression RPAREN
    (9) expression -> . COSINE LPAREN expression RPAREN
    (10) expression -> . TANGENT LPAREN expression RPAREN
    (11) expression -> . PI
    (12) expression -> . FUNC_CALL

    NUMBER          shift and go to state 2
    SQUAREROOT      shift and go to state 3
    SINE            shift and go to state 4
    COSINE          shift and go to state 5
    TANGENT         shift and go to state 6
    PI              shift and go to state 7
    FUNC_CALL       shift and go to state 8

    expression                     shift and go to state 19

state 11

    (4) expression -> expression DIVIDE . expression
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression MULTIPLY expression
    (6) expression -> . SQUAREROOT LPAREN expression RPAREN
    (7) expression -> . expression POWER LPAREN expression RPAREN
    (8) expression -> . SINE LPAREN expression RPAREN
    (9) expression -> . COSINE LPAREN expression RPAREN
    (10) expression -> . TANGENT LPAREN expression RPAREN
    (11) expression -> . PI
    (12) expression -> . FUNC_CALL

    NUMBER          shift and go to state 2
    SQUAREROOT      shift and go to state 3
    SINE            shift and go to state 4
    COSINE          shift and go to state 5
    TANGENT         shift and go to state 6
    PI              shift and go to state 7
    FUNC_CALL       shift and go to state 8

    expression                     shift and go to state 20

state 12

    (5) expression -> expression MULTIPLY . expression
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression MULTIPLY expression
    (6) expression -> . SQUAREROOT LPAREN expression RPAREN
    (7) expression -> . expression POWER LPAREN expression RPAREN
    (8) expression -> . SINE LPAREN expression RPAREN
    (9) expression -> . COSINE LPAREN expression RPAREN
    (10) expression -> . TANGENT LPAREN expression RPAREN
    (11) expression -> . PI
    (12) expression -> . FUNC_CALL

    NUMBER          shift and go to state 2
    SQUAREROOT      shift and go to state 3
    SINE            shift and go to state 4
    COSINE          shift and go to state 5
    TANGENT         shift and go to state 6
    PI              shift and go to state 7
    FUNC_CALL       shift and go to state 8

    expression                     shift and go to state 21

state 13

    (7) expression -> expression POWER . LPAREN expression RPAREN

    LPAREN          shift and go to state 22


state 14

    (6) expression -> SQUAREROOT LPAREN . expression RPAREN
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression MULTIPLY expression
    (6) expression -> . SQUAREROOT LPAREN expression RPAREN
    (7) expression -> . expression POWER LPAREN expression RPAREN
    (8) expression -> . SINE LPAREN expression RPAREN
    (9) expression -> . COSINE LPAREN expression RPAREN
    (10) expression -> . TANGENT LPAREN expression RPAREN
    (11) expression -> . PI
    (12) expression -> . FUNC_CALL

    NUMBER          shift and go to state 2
    SQUAREROOT      shift and go to state 3
    SINE            shift and go to state 4
    COSINE          shift and go to state 5
    TANGENT         shift and go to state 6
    PI              shift and go to state 7
    FUNC_CALL       shift and go to state 8

    expression                     shift and go to state 23

state 15

    (8) expression -> SINE LPAREN . expression RPAREN
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression MULTIPLY expression
    (6) expression -> . SQUAREROOT LPAREN expression RPAREN
    (7) expression -> . expression POWER LPAREN expression RPAREN
    (8) expression -> . SINE LPAREN expression RPAREN
    (9) expression -> . COSINE LPAREN expression RPAREN
    (10) expression -> . TANGENT LPAREN expression RPAREN
    (11) expression -> . PI
    (12) expression -> . FUNC_CALL

    NUMBER          shift and go to state 2
    SQUAREROOT      shift and go to state 3
    SINE            shift and go to state 4
    COSINE          shift and go to state 5
    TANGENT         shift and go to state 6
    PI              shift and go to state 7
    FUNC_CALL       shift and go to state 8

    expression                     shift and go to state 24

state 16

    (9) expression -> COSINE LPAREN . expression RPAREN
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression MULTIPLY expression
    (6) expression -> . SQUAREROOT LPAREN expression RPAREN
    (7) expression -> . expression POWER LPAREN expression RPAREN
    (8) expression -> . SINE LPAREN expression RPAREN
    (9) expression -> . COSINE LPAREN expression RPAREN
    (10) expression -> . TANGENT LPAREN expression RPAREN
    (11) expression -> . PI
    (12) expression -> . FUNC_CALL

    NUMBER          shift and go to state 2
    SQUAREROOT      shift and go to state 3
    SINE            shift and go to state 4
    COSINE          shift and go to state 5
    TANGENT         shift and go to state 6
    PI              shift and go to state 7
    FUNC_CALL       shift and go to state 8

    expression                     shift and go to state 25

state 17

    (10) expression -> TANGENT LPAREN . expression RPAREN
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression MULTIPLY expression
    (6) expression -> . SQUAREROOT LPAREN expression RPAREN
    (7) expression -> . expression POWER LPAREN expression RPAREN
    (8) expression -> . SINE LPAREN expression RPAREN
    (9) expression -> . COSINE LPAREN expression RPAREN
    (10) expression -> . TANGENT LPAREN expression RPAREN
    (11) expression -> . PI
    (12) expression -> . FUNC_CALL

    NUMBER          shift and go to state 2
    SQUAREROOT      shift and go to state 3
    SINE            shift and go to state 4
    COSINE          shift and go to state 5
    TANGENT         shift and go to state 6
    PI              shift and go to state 7
    FUNC_CALL       shift and go to state 8

    expression                     shift and go to state 26

state 18

    (2) expression -> expression PLUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . MULTIPLY expression
    (7) expression -> expression . POWER LPAREN expression RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    $end            reduce using rule 2 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 2 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    DIVIDE          shift and go to state 11
    MULTIPLY        shift and go to state 12
    POWER           shift and go to state 13

  ! PLUS            [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! MULTIPLY        [ reduce using rule 2 (expression -> expression PLUS expression .) ]
  ! POWER           [ reduce using rule 2 (expression -> expression PLUS expression .) ]


state 19

    (3) expression -> expression MINUS expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . MULTIPLY expression
    (7) expression -> expression . POWER LPAREN expression RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    $end            reduce using rule 3 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    DIVIDE          shift and go to state 11
    MULTIPLY        shift and go to state 12
    POWER           shift and go to state 13

  ! PLUS            [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! MULTIPLY        [ reduce using rule 3 (expression -> expression MINUS expression .) ]
  ! POWER           [ reduce using rule 3 (expression -> expression MINUS expression .) ]


state 20

    (4) expression -> expression DIVIDE expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . MULTIPLY expression
    (7) expression -> expression . POWER LPAREN expression RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    $end            reduce using rule 4 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 4 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    DIVIDE          shift and go to state 11
    MULTIPLY        shift and go to state 12
    POWER           shift and go to state 13

  ! PLUS            [ reduce using rule 4 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression DIVIDE expression .) ]
  ! MULTIPLY        [ reduce using rule 4 (expression -> expression DIVIDE expression .) ]
  ! POWER           [ reduce using rule 4 (expression -> expression DIVIDE expression .) ]


state 21

    (5) expression -> expression MULTIPLY expression .
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . MULTIPLY expression
    (7) expression -> expression . POWER LPAREN expression RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    $end            reduce using rule 5 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 5 (expression -> expression MULTIPLY expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    DIVIDE          shift and go to state 11
    MULTIPLY        shift and go to state 12
    POWER           shift and go to state 13

  ! PLUS            [ reduce using rule 5 (expression -> expression MULTIPLY expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> expression MULTIPLY expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression MULTIPLY expression .) ]
  ! MULTIPLY        [ reduce using rule 5 (expression -> expression MULTIPLY expression .) ]
  ! POWER           [ reduce using rule 5 (expression -> expression MULTIPLY expression .) ]


state 22

    (7) expression -> expression POWER LPAREN . expression RPAREN
    (1) expression -> . NUMBER
    (2) expression -> . expression PLUS expression
    (3) expression -> . expression MINUS expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression MULTIPLY expression
    (6) expression -> . SQUAREROOT LPAREN expression RPAREN
    (7) expression -> . expression POWER LPAREN expression RPAREN
    (8) expression -> . SINE LPAREN expression RPAREN
    (9) expression -> . COSINE LPAREN expression RPAREN
    (10) expression -> . TANGENT LPAREN expression RPAREN
    (11) expression -> . PI
    (12) expression -> . FUNC_CALL

    NUMBER          shift and go to state 2
    SQUAREROOT      shift and go to state 3
    SINE            shift and go to state 4
    COSINE          shift and go to state 5
    TANGENT         shift and go to state 6
    PI              shift and go to state 7
    FUNC_CALL       shift and go to state 8

    expression                     shift and go to state 27

state 23

    (6) expression -> SQUAREROOT LPAREN expression . RPAREN
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . MULTIPLY expression
    (7) expression -> expression . POWER LPAREN expression RPAREN

    RPAREN          shift and go to state 28
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    DIVIDE          shift and go to state 11
    MULTIPLY        shift and go to state 12
    POWER           shift and go to state 13


state 24

    (8) expression -> SINE LPAREN expression . RPAREN
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . MULTIPLY expression
    (7) expression -> expression . POWER LPAREN expression RPAREN

    RPAREN          shift and go to state 29
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    DIVIDE          shift and go to state 11
    MULTIPLY        shift and go to state 12
    POWER           shift and go to state 13


state 25

    (9) expression -> COSINE LPAREN expression . RPAREN
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . MULTIPLY expression
    (7) expression -> expression . POWER LPAREN expression RPAREN

    RPAREN          shift and go to state 30
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    DIVIDE          shift and go to state 11
    MULTIPLY        shift and go to state 12
    POWER           shift and go to state 13


state 26

    (10) expression -> TANGENT LPAREN expression . RPAREN
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . MULTIPLY expression
    (7) expression -> expression . POWER LPAREN expression RPAREN

    RPAREN          shift and go to state 31
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    DIVIDE          shift and go to state 11
    MULTIPLY        shift and go to state 12
    POWER           shift and go to state 13


state 27

    (7) expression -> expression POWER LPAREN expression . RPAREN
    (2) expression -> expression . PLUS expression
    (3) expression -> expression . MINUS expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . MULTIPLY expression
    (7) expression -> expression . POWER LPAREN expression RPAREN

    RPAREN          shift and go to state 32
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    DIVIDE          shift and go to state 11
    MULTIPLY        shift and go to state 12
    POWER           shift and go to state 13


state 28

    (6) expression -> SQUAREROOT LPAREN expression RPAREN .

    PLUS            reduce using rule 6 (expression -> SQUAREROOT LPAREN expression RPAREN .)
    MINUS           reduce using rule 6 (expression -> SQUAREROOT LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 6 (expression -> SQUAREROOT LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 6 (expression -> SQUAREROOT LPAREN expression RPAREN .)
    POWER           reduce using rule 6 (expression -> SQUAREROOT LPAREN expression RPAREN .)
    $end            reduce using rule 6 (expression -> SQUAREROOT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 6 (expression -> SQUAREROOT LPAREN expression RPAREN .)


state 29

    (8) expression -> SINE LPAREN expression RPAREN .

    PLUS            reduce using rule 8 (expression -> SINE LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (expression -> SINE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 8 (expression -> SINE LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 8 (expression -> SINE LPAREN expression RPAREN .)
    POWER           reduce using rule 8 (expression -> SINE LPAREN expression RPAREN .)
    $end            reduce using rule 8 (expression -> SINE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (expression -> SINE LPAREN expression RPAREN .)


state 30

    (9) expression -> COSINE LPAREN expression RPAREN .

    PLUS            reduce using rule 9 (expression -> COSINE LPAREN expression RPAREN .)
    MINUS           reduce using rule 9 (expression -> COSINE LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 9 (expression -> COSINE LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 9 (expression -> COSINE LPAREN expression RPAREN .)
    POWER           reduce using rule 9 (expression -> COSINE LPAREN expression RPAREN .)
    $end            reduce using rule 9 (expression -> COSINE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 9 (expression -> COSINE LPAREN expression RPAREN .)


state 31

    (10) expression -> TANGENT LPAREN expression RPAREN .

    PLUS            reduce using rule 10 (expression -> TANGENT LPAREN expression RPAREN .)
    MINUS           reduce using rule 10 (expression -> TANGENT LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 10 (expression -> TANGENT LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 10 (expression -> TANGENT LPAREN expression RPAREN .)
    POWER           reduce using rule 10 (expression -> TANGENT LPAREN expression RPAREN .)
    $end            reduce using rule 10 (expression -> TANGENT LPAREN expression RPAREN .)
    RPAREN          reduce using rule 10 (expression -> TANGENT LPAREN expression RPAREN .)


state 32

    (7) expression -> expression POWER LPAREN expression RPAREN .

    PLUS            reduce using rule 7 (expression -> expression POWER LPAREN expression RPAREN .)
    MINUS           reduce using rule 7 (expression -> expression POWER LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 7 (expression -> expression POWER LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 7 (expression -> expression POWER LPAREN expression RPAREN .)
    POWER           reduce using rule 7 (expression -> expression POWER LPAREN expression RPAREN .)
    $end            reduce using rule 7 (expression -> expression POWER LPAREN expression RPAREN .)
    RPAREN          reduce using rule 7 (expression -> expression POWER LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 18 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 18 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 18 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 18 resolved as shift
WARNING: shift/reduce conflict for POWER in state 18 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 19 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 19 resolved as shift
WARNING: shift/reduce conflict for POWER in state 19 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 20 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 20 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 20 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 20 resolved as shift
WARNING: shift/reduce conflict for POWER in state 20 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 21 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 21 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 21 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 21 resolved as shift
WARNING: shift/reduce conflict for POWER in state 21 resolved as shift
